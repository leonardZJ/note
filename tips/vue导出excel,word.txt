导出 excel
一、下载安装
npm install file-saver@1.3.3     用来保存文件的
npm install --save-dev script-loader   由于由于这几个文件不支持import引入，所以我们需要`script-loader`来将他们挂载到全局环境下。
npm install xlsx   //就是上边提到的js-xlsx这个东东

npm install jszip  //导出为压缩文件，或者是将文件压缩，非必需

二、两个所需要的js文件Blob.js和 Export2Excel.js。

在素材中的lib中
三、src目录下新建vendor文件夹，将Blob.js和 Export2Excel.js放进去。

四、更改webpack.base.conf.js配置
在resolve的 alias 中： 
<script>
	resolve: {
	  extensions: ['.js', '.vue', '.json'],
	  alias: {
	    'vue$': 'vue/dist/vue.esm.js',
	    '@': resolve('src'),
	    'vendor': path.resolve(__dirname, '../src/vendor')
	  }
	},
</script>

五、在vue中
放在data中
<script>
	data() {
		return {
			dataList:[
				    {
				      name:'韩版设计时尚风衣大',
				      number:'MPM00112',
				      salePrice:'￥999.00',
				      stocknums:3423,
				      salesnums:3423,
				      sharenums:3423,
				  },
				  {
				      name:'韩版设计时尚风衣大',
				      number:'MPM00112',
				      salePrice:'￥999.00',
				      stocknums:3423,
				      salesnums:3423,
				      sharenums:3423,
				  },
			]
		}
	},
	methods: {
		formatJson(filterVal, jsonData) {
		    return jsonData.map(v => filterVal.map(j => v[j]))
		},
		export2Excel() {
		    require.ensure([], () => {
		        const { export_json_to_excel } = require('../../vendor/Export2Excel')
		        const tHeader = ['商品名称','商品货号','售价','库存','销量','分享']
		        const filterVal = ['name', 'number', 'salePrice', 'stocknums', 'salesnums', 'sharenums' ]
		        const list = this.list
		        const data = this.formatJson(filterVal, list)
		        export_json_to_excel(tHeader, data, '商品管理列表')
		    })
		}
	}

	// 在需要的放调用 export2Excel
</script>


导出word
需要使用 html-docx.js 插件，配合 file-saver 一起使用，file-saver 可以用npm下载，html-docx.js需要通过script标签引入

1.下载和引入
npm install file-saver --save 用来保存文件
html-docx.js 在素材lib里

在使用的组件里引入 file-saver ，获取 saveAs 函数
在index.html里引入 html-docx.js ，因为 html-docx.js 里用了 with 语法，用import方法在严格模式下会报错、


2.导出
<script>
	// 需要生成完整的html文档
    wordExport(e) {
		var cont = document.getElementById('OICityCar').innerHTML
		var html_document = '<!DOCTYPE html><html><head><title></title>';
		html_document  += '</head><body>' + cont + '</body></html>';
		var converted = htmlDocx.asBlob(html_document, {orientation: 'landscape'});
		saveAs(converted, 'test.docx');
    }
</script>